package com.alexian.metrologia;import android.app.Activity;import android.content.Intent;import android.content.pm.ActivityInfo;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.CompoundButton;import android.widget.LinearLayout;import android.widget.Spinner;import android.widget.Switch;import android.widget.TextView;import android.widget.Toast;import java.util.ArrayList;/** * Created by Ing.Iván on 2017-05-09. */public class Certificados extends AppCompatActivity {    Spinner sp;    private Cursor pry;    private BDManager metrologia;    private SQLiteDatabase db;    private String lugar;    private ViewGroup layout;    private TextView textView;    private LinearLayout row2,row3;    public static Activity cl_certificados;    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.seleccion_certificados);        {            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);            cl_certificados=this;            layout = (ViewGroup) findViewById(R.id.lyContenedor);            final String proyecto = getIntent().getExtras().getString("proyecto");            final String idecombpr=getIntent().getExtras().getString("idecombpr");            metrologia = new BDManager(this, "SistMetPrec.db", null, 1);            db = metrologia.getWritableDatabase();            String[] args1 = new String[]{proyecto};//Argumentos de la consulta            Cursor c1 = db.rawQuery(" SELECT LocPro FROM Proyectos where CodPro=?", args1);//carga del cursor            if (c1.moveToFirst()) {                do {                    lugar = c1.getString(0);                } while (c1.moveToNext());            }            final ArrayList<String> lista = new ArrayList<String>();            try {                String[] args = new String[]{lugar, "A","T"};                Cursor c = db.rawQuery(" SELECT distinct(NomCer) FROM Certificados where (LocCer=? OR  LocCer= 'NAC')  and EstCer=? and TipCer=?", args);                while (c.moveToNext()) {                    String docs = (c.getString(0));                    lista.add(docs);                }            } catch (Exception e) {                //TODO: Handle exception           }            int i;            row2 = (LinearLayout) findViewById(R.id.lyContenedor);            final ArrayList<crea_switch> lista_s=new ArrayList<crea_switch>();            for (i = 0; i < lista.size(); i++) {                lista_s.add(new crea_switch(i,lista.get(i),"a"));            }            for (crea_switch c:lista_s){                final Switch  swt  = new Switch(this);                swt.setId(c.cod);                swt.setText(c.nombre);                swt.setTextOff("Off");                swt.setTextOn("On");                LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(400,5);                layoutParams.setMargins(100,10,0,0);                swt.setLayoutParams(layoutParams);                row2.addView(swt);                swt.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {                    @Override                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {                        //Toast.makeText(getApplicationContext(),"Switch" + buttonView.getId(), Toast.LENGTH_SHORT).show();                        if (swt.isChecked()) {                            int actual=swt.getId();                            int h=0;                            for(crea_switch n:lista_s){                                crea_switch codswitch = lista_s.get(h);                                int elcodswitch=codswitch.cod;                                if (elcodswitch != actual){                                    Switch hg = (Switch)findViewById(elcodswitch);                                    hg.setChecked(false);                                }                                h++;                            }                        }                    }                });            }            //Carga segunda lista            String clase="";            String query="";            String[] args = new String[]{};//{lugar,"A","P","NAC"}            String[] args2 = new String[]{idecombpr};//Argumentos de la consulta            //Cursor c2 = db.rawQuery(" SELECT ClaBpr FROM balxpro where Codbpr=?", args2);//carga del cursor            Cursor c2 = db.rawQuery(" SELECT ClaBpr FROM balxpro where IdeComBpr=?", args2);//carga del cursor            if (c2.moveToFirst()) {                do {                    clase = String.valueOf(c2.getString(0));                } while (c2.moveToNext());            }            c2.close();            if (clase.equals("II")){                args=new String[]{"NAC","A","F",lugar,"A","F",lugar,"A","F"};                //query=" SELECT distinct(NomCer) FROM Certificados where LocCer=? and EstCer=? and ClaCer=? and TipCer=?";                // Query modificado 10 de Mayo de 2018, debido a que los certificados para F2 son nacionales.                query="SELECT distinct(NomCer) FROM Certificados where (LocCer=? and EstCer=?" +                        " and TipCer=?) or (LocCer=? and EstCer=? " +                        " and TipCer=?) or (LocCer=? and EstCer=? and TipCer=?)";            }else if ((clase.equals("III")) || (clase.equals("IIII"))){                //args=new String[]{lugar,"A","C","F","M"};                args=new String[]{"NAC","A","C",lugar,"A","F",lugar,"A","M"};                query=" SELECT distinct(NomCer) FROM Certificados where (LocCer=? and EstCer=?" +                " and TipCer=?) or (LocCer=? and EstCer=?" +                        " and TipCer=?) or (LocCer=? and EstCer=?" +                        " and TipCer=?)";            }else if (clase.equals("Camionera")){                args=new String[]{"A","M1","C","NAC"};                query=" SELECT distinct(NomCer) FROM Certificados where EstCer=? and ClaCer=? and TipCer=? and LocCer=?";            }            ArrayList<String> lista2 = new ArrayList<String>();            try{                //Cursor c = db.rawQuery(" SELECT distinct(NomCer) FROM Certificados where LocCer=? and EstCer=? and TipCer=? or LocCer=?", args);                //Toast.makeText(getApplicationContext(),clase, Toast.LENGTH_SHORT).show();                Cursor c = db.rawQuery(query, args);                while (c.moveToNext()){                    String docs_p = (c.getString(0));                    lista2.add(docs_p);                }            }catch (Exception e){                //TODO: Handle exception            }            int j;            int y=100;            row3 = (LinearLayout) findViewById(R.id.lyPesas);            final ArrayList<crea_switch> lista_r=new ArrayList<crea_switch>();            for (j = 0; j < lista2.size()   ; j++){                lista_r.add(new crea_switch(y,lista2.get(j),"B"));                y=y+100;                }            for (crea_switch c:lista_r){                Switch swt  = new Switch(this);                swt.setId(c.cod);                swt.setText(c.nombre);                swt.setTextOff("Off");                swt.setTextOn("On");                LinearLayout.LayoutParams layoutParams=new LinearLayout.LayoutParams(400,5);                layoutParams.setMargins(100,10,0,0);                swt.setLayoutParams(layoutParams);                row3.addView(swt);                swt.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {                    @Override                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {                    }                });            }            Button bnt = (Button)findViewById(R.id.btnGuardarCertificados);            bnt.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    int cta_h=0;                    String certi = "";                    //String borra = "Delete from Cert_Balxpro where CodBpr=" + codigobpr;                    String borra = "Delete from Cert_Balxpro where IdeComBpr='" + idecombpr + "'";                    db.execSQL(borra);                    int h=0;                    for(crea_switch n:lista_s){                        crea_switch codswitch = lista_s.get(h);                        int elcodswitch=codswitch.cod;                        Switch hg = (Switch)findViewById(elcodswitch);                        if (hg.isChecked()){                            String termo=codswitch.nombre;                            String pone="Insert into Cert_Balxpro values (null,'" + termo + "','" + idecombpr + "')";                            db.execSQL(pone);                            cta_h++;                        }                        h++;                    }                    if (cta_h == 0){                        Toast.makeText(getApplicationContext(), "Debe seleccionar un(1) Termohigrómetro" , Toast.LENGTH_SHORT).show();                        return;                    }                    int g=0;                    int cta_p =0;                    for(crea_switch n:lista_r){                        crea_switch codswch = lista_r.get(g);                        int elcodswch=codswch.cod;                        String verificador=codswch.caux;                        Switch hg = (Switch)findViewById(elcodswch);                        if (hg.isChecked() && (verificador.equals("B"))){                            String masa=codswch.nombre;                            String pone="Insert into Cert_Balxpro values (null,'" + masa + "','" + idecombpr + "')";                            db.execSQL(pone);                            cta_p++;                        }                        g++;                    }                    if (cta_p == 0){                        Toast.makeText(getApplicationContext(), "Debe seleccionar al menos un(1) Patrón" , Toast.LENGTH_SHORT).show();                        return;                    }                    Intent ambientalesI = new Intent(Certificados.this,Ambientales_Inicio.class);                    ambientalesI.putExtra("idecombpr",idecombpr);                    startActivity(ambientalesI);                }            });        }    }    class crea_switch{        private int cod;        private String nombre;        private String caux;        public crea_switch(int cod, String nombre, String caux) {            this.cod = cod;            this.nombre = nombre;            this.caux = caux;        }    }}